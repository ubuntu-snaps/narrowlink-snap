#!/bin/sh -e

if [ -z "$(snapctl get gateway.secret)" ]; then
	snapctl set gateway.secret="105,111,116,98,111,120,115,101,99,114,101,116";
fi

if [ -z "$(snapctl get gateway.domain)" ]; then
	snapctl set gateway.domain="gateway.iotapp.cloud";
fi

if [ -z "$(snapctl get gateway.ws.port)" ]; then
	snapctl set gateway.ws.port="80";
fi

if [ -z "$(snapctl get gateway.wss.enabled)" ]; then
	snapctl set gateway.wss.enabled="true";
fi

if [ -z "$(snapctl get gateway.wss.port)" ]; then
	snapctl set gateway.wss.port="443";
fi

if [ -z "$(snapctl get gateway.acme.email)" ]; then
	snapctl set gateway.acme.email="triobird@163.com";
fi

if [ -z "$(snapctl get agent.uid)" ]; then
	snapctl set agent.uid="00000000-0000-0000-0000-000000000000";
fi

if [ -z "$(snapctl get agent.publish.subdomain)" ]; then
	snapctl set agent.publish.subdomain="iotbox.iotapp.cloud";
fi

WS_DOMAIN=$(snapctl get gateway.domain)
WS_PORT=$(snapctl get gateway.ws.port)
WSS_DOMAIN=$(snapctl get gateway.domain)
WSS_PORT=$(snapctl get gateway.wss.port)

if [ $WS_PORT -ne 80 ]; then
	WS_DOMAIN="$WS_DOMAIN:$WS_PORT"
fi

if [ $WSS_PORT -ne 443 ]; then
	WSS_DOMAIN="$WSS_DOMAIN:$WSS_PORT"
fi

cat > $SNAP_DATA/gateway.yaml <<EOF
name: narrowlink-gateway
secret: [$(snapctl get gateway.secret)]
services:
- !Ws
  domains: ["$WS_DOMAIN"]
  listen_addr: "0.0.0.0:$(snapctl get gateway.ws.port)"
EOF

if [ "$(snapctl get gateway.wss.enabled)" = "true" ]; then
cat >> $SNAP_DATA/gateway.yaml <<EOF
- !Wss
  domains: ["$WSS_DOMAIN"]
  listen_addr: "0.0.0.0:$(snapctl get gateway.wss.port)"
  tls_config: !Acme
    email: "$(snapctl get gateway.acme.email)"
    challenge_type: Http01
    directory_url: https://acme-v02.api.letsencrypt.org/directory
EOF
fi

MACHINE_ID=$(cat /etc/machine-id)
SUBDOMAIN=$(snapctl get agent.publish.subdomain)

cat > $SNAP_DATA/token-generator.yaml <<EOF
secret: [$(snapctl get gateway.secret)]
tokens:
  - !Agent
    uid: $(snapctl get agent.uid)
    name: $MACHINE_ID
    exp: 2051193600 # 2035-01-01T00:00:00+08:00
  - !AgentPublish
    uid: $(snapctl get agent.uid)
    name: $MACHINE_ID
    exp: 2051193600 # 2035-01-01T00:00:00+08:00
    publish_hosts:
      - host: $MACHINE_ID.$SUBDOMAIN
        port: 0
        connect:
          host: 127.0.0.1
          port: 80
          protocol: HTTP
      - host: admin.$MACHINE_ID.$SUBDOMAIN
        port: 0
        connect:
          host: 127.0.0.1
          port: 8100
          protocol: HTTP
      - host: portainer.$MACHINE_ID.$SUBDOMAIN
        port: 0
        connect:
          host: 127.0.0.1
          port: 9443
          protocol: TCP          
EOF

$SNAP/narrowlink-token-generator -c $SNAP_DATA/token-generator.yaml > $SNAP_DATA/tokens

PORT=$(snapctl get gateway.ws.port)
PROTOCOL="Ws"

if [ "$(snapctl get gateway.wss.enabled)" = "true" ]; then
	PORT=$(snapctl get gateway.wss.port)
  PROTOCOL="Wss"
fi

cat > $SNAP_DATA/agent.yaml <<EOF
endpoints:
  - !SelfHosted 
    gateway: $(snapctl get gateway.domain):$PORT
    protocol: $PROTOCOL
    token: $(sed -n '2p' $SNAP_DATA/tokens)
    publish:
      - $(sed -n '5p' $SNAP_DATA/tokens)
EOF

snapctl restart "$SNAP_INSTANCE_NAME"

